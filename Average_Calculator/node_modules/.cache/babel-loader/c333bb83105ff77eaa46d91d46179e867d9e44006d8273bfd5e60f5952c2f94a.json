{"ast":null,"code":"var _jsxFileName = \"B:\\\\727622BAD050\\\\Average_Calculator\\\\src\\\\components\\\\AverageCalculator.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { fetchNumbers } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VALID_IDS = ['Prime', 'Fibo', 'Even', 'Random'];\nconst WINDOW_SIZE = 10;\nconst AverageCalculator = () => {\n  _s();\n  const [windowPrevState, setWindowPrevState] = useState([]);\n  const [windowCurrState, setWindowCurrState] = useState([]);\n  const [numbers, setNumbers] = useState([]);\n  const [avg, setAvg] = useState(null);\n  const [inputType, setInputType] = useState('');\n  const handleFetch = async () => {\n    const type = inputType.trim().toLowerCase();\n    if (!VALID_IDS.includes(type)) {\n      alert('Enter a valid ID: p (prime), f (fibo), e (even), r (random)');\n      return;\n    }\n    const result = await fetchNumbers(type);\n    if (!result || !result.numbers) return;\n    const fetchedNums = result.numbers;\n    const uniqueNew = fetchedNums.filter(num => !windowCurrState.includes(num));\n    const updatedWindow = [...windowCurrState, ...uniqueNew].slice(-WINDOW_SIZE);\n    setWindowPrevState(windowCurrState);\n    setWindowCurrState(updatedWindow);\n    setNumbers(fetchedNums);\n    setAvg((updatedWindow.reduce((a, b) => a + b, 0) / updatedWindow.length).toFixed(2));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: \"2rem\",\n      fontFamily: \"Arial, sans-serif\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Average Calculator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter ID (p, f, e, r)\",\n      value: inputType,\n      onChange: e => setInputType(e.target.value),\n      style: {\n        padding: \"0.5rem\",\n        marginRight: \"1rem\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleFetch,\n      style: {\n        padding: \"0.5rem\"\n      },\n      children: \"Fetch\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: \"2rem\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: JSON.stringify({\n          windowPrevState,\n          windowCurrState,\n          numbers,\n          avg: avg ? parseFloat(avg) : 0\n        }, null, 2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(AverageCalculator, \"gJd/L/x3jTy911GCxQd8o/fCk8U=\");\n_c = AverageCalculator;\nexport default AverageCalculator;\nvar _c;\n$RefreshReg$(_c, \"AverageCalculator\");","map":{"version":3,"names":["React","useState","fetchNumbers","jsxDEV","_jsxDEV","VALID_IDS","WINDOW_SIZE","AverageCalculator","_s","windowPrevState","setWindowPrevState","windowCurrState","setWindowCurrState","numbers","setNumbers","avg","setAvg","inputType","setInputType","handleFetch","type","trim","toLowerCase","includes","alert","result","fetchedNums","uniqueNew","filter","num","updatedWindow","slice","reduce","a","b","length","toFixed","style","padding","fontFamily","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","value","onChange","e","target","marginRight","onClick","marginTop","JSON","stringify","parseFloat","_c","$RefreshReg$"],"sources":["B:/727622BAD050/Average_Calculator/src/components/AverageCalculator.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { fetchNumbers } from '../services/api';\n\nconst VALID_IDS = ['Prime', 'Fibo', 'Even', 'Random'];\nconst WINDOW_SIZE = 10;\n\nconst AverageCalculator = () => {\n  const [windowPrevState, setWindowPrevState] = useState([]);\n  const [windowCurrState, setWindowCurrState] = useState([]);\n  const [numbers, setNumbers] = useState([]);\n  const [avg, setAvg] = useState(null);\n  const [inputType, setInputType] = useState('');\n\n  const handleFetch = async () => {\n    const type = inputType.trim().toLowerCase();\n    if (!VALID_IDS.includes(type)) {\n      alert('Enter a valid ID: p (prime), f (fibo), e (even), r (random)');\n      return;\n    }\n\n    const result = await fetchNumbers(type);\n    if (!result || !result.numbers) return;\n\n    const fetchedNums = result.numbers;\n    const uniqueNew = fetchedNums.filter((num) => !windowCurrState.includes(num));\n    const updatedWindow = [...windowCurrState, ...uniqueNew].slice(-WINDOW_SIZE);\n\n    setWindowPrevState(windowCurrState);\n    setWindowCurrState(updatedWindow);\n    setNumbers(fetchedNums);\n    setAvg((updatedWindow.reduce((a, b) => a + b, 0) / updatedWindow.length).toFixed(2));\n  };\n\n  return (\n    <div style={{ padding: \"2rem\", fontFamily: \"Arial, sans-serif\" }}>\n      <h1>Average Calculator</h1>\n      <input\n        type=\"text\"\n        placeholder=\"Enter ID (p, f, e, r)\"\n        value={inputType}\n        onChange={(e) => setInputType(e.target.value)}\n        style={{ padding: \"0.5rem\", marginRight: \"1rem\" }}\n      />\n      <button onClick={handleFetch} style={{ padding: \"0.5rem\" }}>\n        Fetch\n      </button>\n\n      <div style={{ marginTop: \"2rem\" }}>\n        <pre>{JSON.stringify({\n          windowPrevState,\n          windowCurrState,\n          numbers,\n          avg: avg ? parseFloat(avg) : 0\n        }, null, 2)}</pre>\n      </div>\n    </div>\n  );\n};\n\nexport default AverageCalculator;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}